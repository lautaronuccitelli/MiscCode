// 游빌 Funci칩n auxiliar para generar tabla de frecuencia de variables categ칩ricas
function generarFrecuencia(data, campo, contenedorID) {
  const conteo = {};

  // 游댌 Se cuenta cu치ntas veces aparece cada categor칤a (frecuencia absoluta)
  data.forEach((item) => {
    const clave = item[campo];
    if (clave) {
      conteo[clave] = (conteo[clave] || 0) + 1;
    }
  });

  // 游댝 Se calcula el total de observaciones para obtener proporciones luego
  const total = Object.values(conteo).reduce((a, b) => a + b, 0);
  let acumulada = 0;

  const contenedor = document.getElementById(contenedorID);
  if (!contenedor) {
    console.warn(`Contenedor con id "${contenedorID}" no encontrado.`);
    return;
  }

  // 游늵 Se construye una tabla con:
  // - Frecuencia absoluta
  // - Frecuencia acumulada
  // - Frecuencia relativa (porcentaje)
  Object.entries(conteo)
    .sort()
    .forEach(([clave, valor]) => {
      acumulada += valor;
      const fila = document.createElement("tr");
      fila.innerHTML = `
      <td>${clave}</td>
      <td>${valor}</td>
      <td>${acumulada}</td>
      <td>${((valor / total) * 100).toFixed(2)}%</td>
    `;
      contenedor.appendChild(fila);
    });
}

// 游닌 Se ejecuta autom치ticamente si estamos en FrequencyTable.html
// Esto permite generar tablas de frecuencia al cargar la p치gina
if (document.body.id === "FrequencyTable") {
  fetch("https://apidemo.geoeducacion.com.ar/api/testing/encuesta/1")
    .then((response) => {
      if (!response.ok) throw new Error(`Error HTTP: ${response.status}`);
      return response.json();
    })
    .then((data) => {
      const estudiantes = data.data;

      // 游늳 Se genera tabla de frecuencia para las variables categ칩ricas: nivel y curso
      generarFrecuencia(estudiantes, "nivel", "frecuencia-nivel");
      generarFrecuencia(estudiantes, "curso", "frecuencia-curso");
    })
    .catch((error) => {
      console.error("Error al cargar datos de frecuencia:", error);
      alert("Hubo un error al cargar las tablas de frecuencia.");
    });
}

// 游대 Interacci칩n de interfaz: abrir/cerrar men칰
document.addEventListener("DOMContentLoaded", function () {
  const toggle = document.getElementById("menu-toggle");
  const menu = document.getElementById("side-menu");

  toggle.addEventListener("click", function () {
    menu.classList.toggle("open");
  });
});

// 游늵 Funci칩n para calcular estad칤sticas descriptivas de una variable num칠rica (edad)
async function obtenerEstadisticas() {
  try {
    const response = await fetch(
      "https://apidemo.geoeducacion.com.ar/api/testing/encuesta/1"
    );
    if (!response.ok) {
      throw new Error("Error al obtener los datos");
    }
    const data = await response.json();
    const edades = data.data.map((est) => est.Edad).filter((e) => e != null);

    if (edades.length === 0) {
      throw new Error("No se encontraron edades v치lidas");
    }

    // 游늳 Se calculan estad칤sticas de tendencia central, dispersi칩n y posici칩n
    const estadisticas = calcularEstadisticas(edades);

    // 游늶 Se muestran en una tabla
    mostrarEstadisticas(estadisticas);
  } catch (error) {
    console.error(error);
    alert("Hubo un error al cargar los datos.");
  }
}

// 丘뙖잺 Calcula estad칤sticos b치sicos para una variable num칠rica (edad)
function calcularEstadisticas(edades) {
  const n = edades.length;

  // 游늷 Media: tendencia central
  const media = edades.reduce((acc, edad) => acc + edad, 0) / n;

  // 游늷 Mediana: valor central ordenado
  const sorted = [...edades].sort((a, b) => a - b);
  const mediana =
    n % 2 === 0
      ? (sorted[n / 2 - 1] + sorted[n / 2]) / 2
      : sorted[Math.floor(n / 2)];

  // 游늴 Valores extremos: m칤nimo y m치ximo
  const min = Math.min(...edades);
  const max = Math.max(...edades);

  // 游늵 Cuartiles: Q1 (25%) y Q3 (75%) indican posici칩n
  const q1 = calcularCuartil(sorted, 0.25);
  const q3 = calcularCuartil(sorted, 0.75);

  // 游댃 Desviaci칩n est치ndar: dispersi칩n de los datos respecto a la media
  const desviacionEstandar = Math.sqrt(
    edades.reduce((acc, edad) => acc + Math.pow(edad - media, 2), 0) / n
  );

  return {
    media,
    mediana,
    min,
    max,
    q1,
    q3,
    desviacionEstandar,
  };
}

// 游댝 Funci칩n para interpolar cuartiles dentro de un conjunto ordenado
function calcularCuartil(sorted, cuartil) {
  const pos = (sorted.length - 1) * cuartil;
  const base = Math.floor(pos);
  const resto = pos - base;
  return sorted[base] + resto * (sorted[base + 1] - sorted[base]);
}

// 游늶 Mostrar las estad칤sticas calculadas en una tabla HTML
function mostrarEstadisticas(estadisticas) {
  const tbody = document.getElementById("estadisticas");
  tbody.innerHTML = `
          <tr><td>Media</td><td>${estadisticas.media.toFixed(2)}</td></tr>
          <tr><td>Mediana</td><td>${estadisticas.mediana.toFixed(2)}</td></tr>
          <tr><td>Valor M칤nimo</td><td>${estadisticas.min}</td></tr>
          <tr><td>Valor M치ximo</td><td>${estadisticas.max}</td></tr>
          <tr><td>Primer Cuartil (Q1)</td><td>${estadisticas.q1.toFixed(2)}</td></tr>
          <tr><td>Segundo Cuartil (Q3)</td><td>${estadisticas.q3.toFixed(2)}</td></tr>
          <tr><td>Desviaci칩n Est치ndar</td><td>${estadisticas.desviacionEstandar.toFixed(2)}</td></tr>
        `;
}

// 游닌 Carga las estad칤sticas autom치ticamente cuando la p치gina se carga
window.onload = obtenerEstadisticas;

// 游대 Interacci칩n de interfaz (repetida)
document.addEventListener("DOMContentLoaded", function () {
  const toggle = document.getElementById("menu-toggle");
  const menu = document.getElementById("side-menu");

  toggle.addEventListener("click", function () {
    menu.classList.toggle("open");
  });
});

// 游닆 Muestra los datos originales de cada estudiante (datos crudos)
fetch("https://apidemo.geoeducacion.com.ar/api/testing/encuesta/1")
  .then((response) => {
    if (!response.ok) {
      throw new Error(`Error HTTP: ${response.status}`);
    }
    return response.json();
  })
  .then((data) => {
    const estudiantes = data.data;
    const tbody = document.getElementById("tabla-estudiantes");

    // 游꿢 Permite revisar individualmente cada registro de la muestra
    estudiantes.forEach((estudiante) => {
      const fila = document.createElement("tr");

      fila.innerHTML = `
            <td>${estudiante.nombre}</td>
            <td>${estudiante.apellido}</td>
            <td>${estudiante.Edad}</td>
            <td>${estudiante.curso}</td>
            <td>${estudiante.nivel}</td>
          `;

      tbody.appendChild(fila);
    });
  })
  .catch((error) => {
    console.error("Hubo un error en la consulta:", error);
    alert("Error al consultar la API. Revis치 la consola para m치s detalles.");
  });

// 游대 Interacci칩n del men칰 (repetida)
document.addEventListener("DOMContentLoaded", function () {
  const toggle = document.getElementById("menu-toggle");
  const menu = document.getElementById("side-menu");

  toggle.addEventListener("click", function () {
    menu.classList.toggle("open");
  });
});